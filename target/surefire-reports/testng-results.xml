<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="39" passed="34" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-28T19:55:47 IST" name="RestAssuredSuite" finished-at="2022-11-28T19:56:00 IST" duration-ms="12615">
    <groups>
    </groups>
    <test started-at="2022-11-28T19:55:47 IST" name="RestAssuredTests" finished-at="2022-11-28T19:56:00 IST" duration-ms="12615">
      <class name="com.employee.testcases.TC004_POST_Employee_Record_with_Random_data">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:55:59 IST" name="setup" finished-at="2022-11-28T19:55:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="getEmpData()[pri:0, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:55:59 IST" name="getEmpData" finished-at="2022-11-28T19:55:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmpData -->
        <test-method signature="postemployee(java.lang.String,java.lang.String,java.lang.String)[pri:-1, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:55:59 IST" name="postemployee" data-provider="empdataprovider" finished-at="2022-11-28T19:56:00 IST" duration-ms="1179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John cBYSK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24520]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[82]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postemployee -->
        <test-method signature="checkResponsebody()[pri:0, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:56:00 IST" name="checkResponsebody" finished-at="2022-11-28T19:56:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponsebody -->
        <test-method signature="checkStatusCode()[pri:1, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:56:00 IST" name="checkStatusCode" finished-at="2022-11-28T19:56:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkResponseTime()[pri:2, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:56:00 IST" name="checkResponseTime" finished-at="2022-11-28T19:56:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusline()[pri:3, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:56:00 IST" name="checkStatusline" finished-at="2022-11-28T19:56:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusline -->
        <test-method signature="checkContentType()[pri:4, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:56:00 IST" name="checkContentType" finished-at="2022-11-28T19:56:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkContentLength()[pri:5, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:56:00 IST" name="checkContentLength" finished-at="2022-11-28T19:56:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.employee.testcases.TC004_POST_Employee_Record_with_Random_data@1ea9f6af]" started-at="2022-11-28T19:56:00 IST" name="teardown" finished-at="2022-11-28T19:56:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.employee.testcases.TC004_POST_Employee_Record_with_Random_data -->
      <class name="com.employee.testcases.TC003_POST_Employee_Record">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:54 IST" name="setup" finished-at="2022-11-28T19:55:54 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="postemployee(java.lang.String,java.lang.String,java.lang.String)[pri:-1, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:54 IST" name="postemployee" data-provider="empdataprovider" finished-at="2022-11-28T19:55:56 IST" duration-ms="1200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Johnny]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postemployee -->
        <test-method signature="postemployee(java.lang.String,java.lang.String,java.lang.String)[pri:-1, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:56 IST" name="postemployee" data-provider="empdataprovider" finished-at="2022-11-28T19:55:57 IST" duration-ms="1036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Steve]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[40000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postemployee -->
        <test-method signature="postemployee(java.lang.String,java.lang.String,java.lang.String)[pri:-1, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:57 IST" name="postemployee" data-provider="empdataprovider" finished-at="2022-11-28T19:55:58 IST" duration-ms="1072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Harley]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postemployee -->
        <test-method signature="postemployee(java.lang.String,java.lang.String,java.lang.String)[pri:-1, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:58 IST" name="postemployee" data-provider="empdataprovider" finished-at="2022-11-28T19:55:59 IST" duration-ms="1099" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Cena]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[80000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postemployee -->
        <test-method signature="checkResponsebody()[pri:0, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:59 IST" name="checkResponsebody" finished-at="2022-11-28T19:55:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponsebody -->
        <test-method signature="checkStatusCode()[pri:1, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:59 IST" name="checkStatusCode" finished-at="2022-11-28T19:55:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkResponseTime()[pri:2, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:59 IST" name="checkResponseTime" finished-at="2022-11-28T19:55:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusline()[pri:3, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:59 IST" name="checkStatusline" finished-at="2022-11-28T19:55:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusline -->
        <test-method signature="checkContentType()[pri:4, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:59 IST" name="checkContentType" finished-at="2022-11-28T19:55:59 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkContentLength()[pri:5, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:59 IST" name="checkContentLength" finished-at="2022-11-28T19:55:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.employee.testcases.TC003_POST_Employee_Record@188715b5]" started-at="2022-11-28T19:55:59 IST" name="teardown" finished-at="2022-11-28T19:55:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.employee.testcases.TC003_POST_Employee_Record -->
      <class name="com.employee.testcases.TC006_DELETE_Employee_Record">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.employee.testcases.TC006_DELETE_Employee_Record@16ec5519]" started-at="2022-11-28T19:55:51 IST" name="setup" finished-at="2022-11-28T19:55:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="postemployee()[pri:0, instance:com.employee.testcases.TC006_DELETE_Employee_Record@16ec5519]" started-at="2022-11-28T19:55:51 IST" name="postemployee" finished-at="2022-11-28T19:55:53 IST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postemployee -->
        <test-method signature="checkResponsebody()[pri:0, instance:com.employee.testcases.TC006_DELETE_Employee_Record@16ec5519]" started-at="2022-11-28T19:55:53 IST" name="checkResponsebody" finished-at="2022-11-28T19:55:53 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponsebody -->
        <test-method signature="checkStatusCode()[pri:1, instance:com.employee.testcases.TC006_DELETE_Employee_Record@16ec5519]" started-at="2022-11-28T19:55:53 IST" name="checkStatusCode" finished-at="2022-11-28T19:55:53 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [405]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [405]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at com.employee.testcases.TC006_DELETE_Employee_Record.checkStatusCode(TC006_DELETE_Employee_Record.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkResponseTime()[pri:2, instance:com.employee.testcases.TC006_DELETE_Employee_Record@16ec5519]" started-at="2022-11-28T19:55:53 IST" name="checkResponseTime" finished-at="2022-11-28T19:55:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.employee.testcases.TC006_DELETE_Employee_Record@16ec5519]" started-at="2022-11-28T19:55:53 IST" name="teardown" finished-at="2022-11-28T19:55:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.employee.testcases.TC006_DELETE_Employee_Record -->
      <class name="com.employee.testcases.TC005_PUT_Update_Employee_Record">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:50 IST" name="setup" finished-at="2022-11-28T19:55:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="postemployee(java.lang.String,java.lang.String,java.lang.String)[pri:-1, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:50 IST" name="postemployee" data-provider="empdataprovider" finished-at="2022-11-28T19:55:51 IST" duration-ms="1109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John wYeuJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12721]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postemployee -->
        <test-method signature="checkResponsebody()[pri:0, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:51 IST" name="checkResponsebody" finished-at="2022-11-28T19:55:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponsebody -->
        <test-method signature="checkStatusCode()[pri:1, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:51 IST" name="checkStatusCode" finished-at="2022-11-28T19:55:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkResponseTime()[pri:2, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:51 IST" name="checkResponseTime" finished-at="2022-11-28T19:55:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusline()[pri:3, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:51 IST" name="checkStatusline" finished-at="2022-11-28T19:55:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusline -->
        <test-method signature="checkContentType()[pri:4, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:51 IST" name="checkContentType" finished-at="2022-11-28T19:55:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkContentLength()[pri:5, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:51 IST" name="checkContentLength" finished-at="2022-11-28T19:55:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.employee.testcases.TC005_PUT_Update_Employee_Record@61df66b6]" started-at="2022-11-28T19:55:51 IST" name="teardown" finished-at="2022-11-28T19:55:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.employee.testcases.TC005_PUT_Update_Employee_Record -->
      <class name="com.employee.testcases.TC001_GET_All_Employees">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:48 IST" name="setup" finished-at="2022-11-28T19:55:48 IST" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:48 IST" name="getAllEmployees" finished-at="2022-11-28T19:55:50 IST" duration-ms="2228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkResponsebody()[pri:0, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:50 IST" name="checkResponsebody" finished-at="2022-11-28T19:55:50 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponsebody -->
        <test-method signature="checkStatusCode()[pri:1, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:50 IST" name="checkStatusCode" finished-at="2022-11-28T19:55:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkResponseTime()[pri:2, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:50 IST" name="checkResponseTime" finished-at="2022-11-28T19:55:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusline()[pri:3, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:50 IST" name="checkStatusline" finished-at="2022-11-28T19:55:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusline -->
        <test-method signature="checkContentType()[pri:4, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:50 IST" name="checkContentType" finished-at="2022-11-28T19:55:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkServerType()[pri:5, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:50 IST" name="checkServerType" finished-at="2022-11-28T19:55:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.employee.testcases.TC001_GET_All_Employees@130161f7]" started-at="2022-11-28T19:55:50 IST" name="teardown" finished-at="2022-11-28T19:55:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.employee.testcases.TC001_GET_All_Employees -->
      <class name="com.employee.testcases.TC002_GET_Single_Employee_Details">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:53 IST" name="setup" finished-at="2022-11-28T19:55:53 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:53 IST" name="getAllEmployees" finished-at="2022-11-28T19:55:54 IST" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkResponsebody()[pri:0, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:54 IST" name="checkResponsebody" finished-at="2022-11-28T19:55:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponsebody -->
        <test-method signature="checkStatusCode()[pri:1, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:54 IST" name="checkStatusCode" finished-at="2022-11-28T19:55:54 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [429]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [429]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at com.employee.testcases.TC002_GET_Single_Employee_Details.checkStatusCode(TC002_GET_Single_Employee_Details.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkResponseTime()[pri:2, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:54 IST" name="checkResponseTime" finished-at="2022-11-28T19:55:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusline()[pri:3, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:54 IST" name="checkStatusline" finished-at="2022-11-28T19:55:54 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 429 Too Many Requests]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 429 Too Many Requests]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.employee.testcases.TC002_GET_Single_Employee_Details.checkStatusline(TC002_GET_Single_Employee_Details.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusline -->
        <test-method signature="checkContentType()[pri:4, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:54 IST" name="checkContentType" finished-at="2022-11-28T19:55:54 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [application/json] but found [text/html; charset=UTF-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [application/json] but found [text/html; charset=UTF-8]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.employee.testcases.TC002_GET_Single_Employee_Details.checkContentType(TC002_GET_Single_Employee_Details.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkContentLength()[pri:5, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:54 IST" name="checkContentLength" finished-at="2022-11-28T19:55:54 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Cannot parse null string]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Cannot parse null string
at java.base/java.lang.Integer.parseInt(Integer.java:630)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at com.employee.testcases.TC002_GET_Single_Employee_Details.checkContentLength(TC002_GET_Single_Employee_Details.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.employee.testcases.TC002_GET_Single_Employee_Details@2f7298b]" started-at="2022-11-28T19:55:54 IST" name="teardown" finished-at="2022-11-28T19:55:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.employee.testcases.TC002_GET_Single_Employee_Details -->
    </test> <!-- RestAssuredTests -->
  </suite> <!-- RestAssuredSuite -->
</testng-results>
